{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/StorePicker.js","components/NotFound.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","bind","key","fish","this","fishes","count","order","removeButton","onClick","removeFromOrder","status","timeout","classNames","component","name","price","orderIds","Object","keys","total","reduce","prevTotal","map","React","Component","AddFishForm","event","preventDefault","value","desc","image","addFish","formField","reset","ref","input","onSubmit","e","createFish","type","placeholder","base","firebase","initializeApp","apiKey","authDomain","databaseURL","Inventory","renderInventory","renderLogin","handleChange","authenticate","logout","authHandler","state","uid","owner","auth","onAuthStateChanged","user","updatedFish","target","updateFish","providerText","provider","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","signInWithPopup","then","catch","error","console","log","signOut","setState","authData","storeRef","database","once","snapshot","data","val","set","onChange","removeFish","loadSamples","Fish","details","index","isAvailable","buttonText","src","alt","addToOrder","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","baseObj","Rebase","createClass","syncState","match","params","storeId","context","localStorageRef","localStorage","getItem","JSON","parse","removeBinding","nextProps","nextState","setItem","stringify","timestamp","Date","now","sampleFishes","StorePicker","storeInput","router","history","push","goToStore","required","defaultValue","contextTypes","PropTypes","object","NotFound","repo","window","location","pathname","split","render","BrowserRouter","basename","Switch","Route","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.75664d95.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className=\"top\">\r\n            <h1>\r\n                Catch \r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">of</span>\r\n                    <span className=\"the\">the</span>\r\n                </span>\r\n                Day\r\n            </h1>\r\n            <h3 className=\"tagline\"><span>{props.tagline}</span></h3>\r\n        </header>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Order extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.renderOrder = this.renderOrder.bind(this);\r\n    }\r\n    renderOrder(key) {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const removeButton = <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\r\n\r\n        if(!fish || fish.status === 'unavailable'){\r\n            return (\r\n                <CSSTransition timeout={500} classNames=\"order\" key={key}>\r\n                    <li key={key}>Sorry, {fish ? fish.name:'fish'} is no longer available{removeButton}</li>\r\n                </CSSTransition>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <CSSTransition timeout={500} classNames=\"order\" key={key}>\r\n                <li key={key}>\r\n                    <span>\r\n                        <TransitionGroup component=\"span\" className=\"count\">\r\n                            <CSSTransition timeout={250} classNames=\"count\" key={count}>\r\n                                <span key={count}>{count}</span>\r\n                            </CSSTransition>\r\n                        </TransitionGroup>\r\n                        lbs {fish.name} {removeButton}\r\n                    </span>\r\n                    <span className=\"price\">{formatPrice(count*fish.price)}</span>\r\n                </li>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const fish = this.props.fishes[key];\r\n            const count = this.props.order[key];\r\n            const isAvailable = fish && fish.status === 'available';\r\n            if(isAvailable) {\r\n                return prevTotal + (count*fish.price || 0);\r\n            }\r\n            return prevTotal;\r\n        }, 0);\r\n\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Your Order</h2>\r\n                <TransitionGroup  \r\n                    className=\"order\" \r\n                    component=\"ul\"\r\n                >\r\n                    {orderIds.map(this.renderOrder)}\r\n                    <CSSTransition timeout={500} classNames=\"order\" key=\"total\">\r\n                        <li className=\"total\">\r\n                            <strong>Total:</strong>\r\n                            {formatPrice(total)}\r\n                        </li>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nOrder.propTypes = {\r\n    fishes: PropTypes.object.isRequired,\r\n    order: PropTypes.object.isRequired,\r\n    removeFromOrder: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n    createFish(event){\r\n        event.preventDefault()\r\n        const fish = {\r\n            name: this.name.value,\r\n            price: this.price.value,\r\n            status: this.status.value,\r\n            desc: this.desc.value,\r\n            image: this.image.value,\r\n        }\r\n\r\n        this.props.addFish(fish);\r\n        this.formField.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form ref={(input) => {this.formField=input}}className=\"fish-edit\" onSubmit={(e)=>{this.createFish(e)}}>\r\n                <input ref={(input) => {this.name=input}} type=\"text\" placeholder=\"Fish Name\"/>\r\n                <input ref={(input) => {this.price=input}} type=\"text\" placeholder=\"Fish Price\"/>\r\n                <select ref={(input) => {this.status=input}}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea ref={(input) => {this.desc=input}} placeholder=\"Fish Desc\"></textarea>\r\n                <input ref={(input) => {this.image=input}} type=\"text\" placeholder=\"Fish Image\"/>\r\n                <button type=\"submit\">+ Add Item</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAddFishForm.propTypes = {\r\n    addFish: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddFishForm;","import firebase from 'firebase'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAoNXzikxDKsGDLuSzoC0a7OYbvwMwqBjs\",\r\n    authDomain: \"catch-of-the-day-4c4f0.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-4c4f0.firebaseio.com\",\r\n};\r\n\r\nconst base = firebase.initializeApp(config)\r\n// const base = Rebase.createClass(app.database())\r\n\r\nexport default base;","import React from 'react';\r\nimport AddFishForm from './AddFishForm';\r\nimport PropTypes from 'prop-types';\r\nimport base from '../base'\r\nimport firebase from 'firebase';\r\n\r\nclass Inventory extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.renderInventory = this.renderInventory.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.authenticate = this.authenticate.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.authHandler = this.authHandler.bind(this);\r\n\r\n        this.state = {\r\n            uid: null,\r\n            owner: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        base.auth().onAuthStateChanged((user) => {\r\n            if(user){\r\n                this.authHandler({user});\r\n            }\r\n        });\r\n    }\r\n\r\n    handleChange(e, key) {\r\n        const fish = this.props.fishes[key];\r\n\r\n        const updatedFish = {\r\n            ...fish,\r\n            [e.target.name]: e.target.value\r\n        }\r\n\r\n        this.props.updateFish(key, updatedFish);\r\n    }\r\n\r\n    authenticate(providerText) {\r\n        let provider = null;\r\n        if(providerText === 'facebook') {\r\n            provider = new firebase.auth.FacebookAuthProvider();\r\n        }else if(providerText === 'twitter'){\r\n            provider = new firebase.auth.TwitterAuthProvider();\r\n        }else{\r\n            provider = new firebase.auth.GithubAuthProvider();\r\n        }\r\n\r\n        base.auth().signInWithPopup(provider)\r\n            .then(this.authHandler)\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        base.auth()\r\n            .signOut()\r\n            .then(() => {\r\n                this.setState({ uid: null })\r\n            })\r\n            .catch((error) => {\r\n                // An error happened\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    authHandler(authData) {\r\n        // console.log(authData);\r\n        //grab the store info\r\n        const storeRef = base.database().ref();\r\n        //query the firbase once for the store data\r\n        storeRef.once('value', (snapshot) => {\r\n            const data = snapshot.val();\r\n\r\n            if(!data.owner){\r\n                storeRef.set({\r\n                    owner: authData.user.uid\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                uid: authData.user.uid,\r\n                owner: data.owner || authData.user.uid\r\n            });\r\n        });\r\n    }\r\n\r\n    renderLogin() {\r\n        return (\r\n            <nav className=\"login\">\r\n                <h2>Inventory</h2>\r\n                <p>Sign in to manage your store's inventory</p>\r\n                <button className=\"facebook\" onClick={() => this.authenticate('facebook')}>Log in with Facebook</button>\r\n                <button className=\"twitter\" onClick={() => this.authenticate('twitter')}>Log in with Twitter</button>\r\n                <button className=\"github\" onClick={() => this.authenticate('github')}>Log in with Github</button>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    renderInventory(key){\r\n        const fish = this.props.fishes[key];\r\n        return (\r\n            <div className=\"fish-edit\" key={key}>\r\n                <input type=\"text\" name=\"name\" value={fish.name} onChange={(e) => this.handleChange(e, key)} placeholder=\"Fish Name\"/>\r\n                <input type=\"text\" name=\"price\" value={fish.price} onChange={(e) => this.handleChange(e, key)} placeholder=\"Fish Price\"/>\r\n                <select name=\"status\" value={fish.status} onChange={(e) => this.handleChange(e, key)}>\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n                <textarea name=\"desc\" value={fish.desc} onChange={(e) => this.handleChange(e, key)} placeholder=\"Fish Desc\"></textarea>\r\n                <input type=\"text\" name=\"image\" value={fish.image} onChange={(e) => this.handleChange(e, key)} placeholder=\"Fish Image\"/>\r\n                <button onClick={() => this.props.removeFish(key)}>Remove Fish</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const logout = <button onClick={() => this.logout()}>Log Out!</button>\r\n        //check if they are not logged in at all\r\n        if(!this.state.uid) {\r\n            return <div>{this.renderLogin()}</div>\r\n        }\r\n\r\n        //check if they are the owner\r\n        if(this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <p>Sorry you aren't the owner of the store</p>\r\n                    {logout}\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>Inventory</h2>\r\n                {logout}\r\n                {Object.keys(this.props.fishes).map(this.renderInventory)}\r\n                <AddFishForm addFish = {this.props.addFish}/>\r\n                <button onClick={this.props.loadSamples}>Load Sample Fishes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInventory.propTypes = {\r\n    addFish: PropTypes.func.isRequired,\r\n    updateFish: PropTypes.func.isRequired,\r\n    removeFish: PropTypes.func.isRequired,\r\n    loadSamples: PropTypes.func.isRequired,\r\n    fishes: PropTypes.object.isRequired,\r\n    storeId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Inventory;","import React from 'react';\r\nimport { formatPrice } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Fish extends React.Component {\r\n    render() {\r\n        const { details, index } = this.props;\r\n        const isAvailable = details.status === 'available';\r\n        const buttonText = isAvailable ? 'Add To Order': 'Sold Out';\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={details.image} alt={details.name} />\r\n                <h3 className=\"fish-name\">\r\n                    {details.name}\r\n                    <span className=\"price\">{formatPrice(details.price)}</span>\r\n                </h3>\r\n                <p>{details.desc}</p>\r\n                <button onClick={() => this.props.addToOrder(index)} disabled={!isAvailable}>{buttonText}</button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nFish.propTypes = {\r\n    details: PropTypes.object.isRequired,\r\n    index: PropTypes.string.isRequired,\r\n    addToOrder: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport Header from './Header.js';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory'; \r\nimport Fish from './Fish';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Rebase from 're-base';\r\nimport base from '../base';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.addFish = this.addFish.bind(this);\r\n        this.loadSamples = this.loadSamples.bind(this);\r\n        this.addToOrder = this.addToOrder.bind(this);\r\n        this.removeFromOrder = this.removeFromOrder.bind(this);\r\n        this.updateFish = this.updateFish.bind(this);\r\n        this.removeFish = this.removeFish.bind(this);\r\n        this.state = {\r\n            fishes:{},\r\n            order:{}\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        // this runs before the App is rendered\r\n        const baseObj = Rebase.createClass(base.database());\r\n        this.ref = baseObj.syncState(`${this.props.match.params.storeId}/fishes`,{\r\n            context: this,\r\n            state: 'fishes'\r\n        });\r\n\r\n        // check if there are any order in localStorage\r\n        const localStorageRef = localStorage.getItem(`order-${this.props.match.params.storeId}`);\r\n\r\n        if(localStorageRef) {\r\n            this.setState({\r\n                order: JSON.parse(localStorageRef)\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        localStorage.setItem(`order-${this.props.match.params.storeId}`, JSON.stringify(nextState.order));\r\n    }\r\n\r\n    addFish(fish) {\r\n        const fishes = {...this.state.fishes};\r\n        const timestamp = Date.now();\r\n        fishes[`fish-${timestamp}`] = fish;\r\n\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    updateFish(key, updatedFish) {\r\n        const fishes = {...this.state.fishes};\r\n        fishes[key] = updatedFish;\r\n\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    removeFish(key) {\r\n        const fishes = {...this.state.fishes};\r\n        fishes[key] = null;\r\n\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    loadSamples(){\r\n        this.setState({\r\n            fishes: sampleFishes\r\n        })\r\n    }\r\n\r\n    addToOrder(key) {\r\n        const order = {...this.state.order};\r\n        order[key] = order[key]+1 || 1;\r\n\r\n        this.setState({ order });\r\n    }\r\n\r\n    removeFromOrder(key) {\r\n        const order = {...this.state.order};\r\n        delete order[key];\r\n        this.setState({ order });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\"/>\r\n                    <ul className=\"list-of-fishes\">\r\n                        {\r\n                            Object.keys(this.state.fishes).map(key => \r\n                            <Fish \r\n                                key={key} \r\n                                details={this.state.fishes[key]} \r\n                                addToOrder={this.addToOrder} \r\n                                index={key}\r\n                            />\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <Order \r\n                    fishes={this.state.fishes} \r\n                    order={this.state.order}\r\n                    removeFromOrder={this.removeFromOrder}\r\n                />\r\n                <Inventory \r\n                    addFish = {this.addFish} \r\n                    loadSamples = {this.loadSamples} \r\n                    fishes={this.state.fishes} \r\n                    updateFish={this.updateFish}\r\n                    removeFish={this.removeFish}\r\n                    storeId={this.props.match.params.storeId}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport { getFunName } from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StorePicker extends React.Component {\r\n    goToStore(event){\r\n        event.preventDefault();\r\n        console.log(this.storeInput.value);\r\n        const storeId = this.storeInput.value\r\n        this.context.router.history.push(`/store/${storeId}`);\r\n    }\r\n    render(){\r\n        return (\r\n            <form className=\"store-selector\" onSubmit={(e) => {this.goToStore(e)}}>\r\n                <h2>Please Enter A Store</h2>\r\n                <input type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()} \r\n                    ref={(input) => {this.storeInput = input}}/>  \r\n                <button type=\"submit\">Visit Store -></button>      \r\n            </form>\r\n        )\r\n    } \r\n}\r\nStorePicker.contextTypes = {\r\n    router: PropTypes.object\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <h2>Not Found!</h2>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport './css/style.css';\r\nimport App from './components/App';\r\nimport StorePicker from './components/StorePicker';\r\nimport NotFound from './components/NotFound';\r\n\r\nconst repo = `/${window.location.pathname.split('/')[1]}`;\r\n\r\nconst Root = () => {\r\n    return (\r\n        <BrowserRouter basename={repo}>\r\n            <Switch>\r\n                <Route exact  path=\"/\" component={StorePicker} />\r\n                <Route path =\"/store/:storeId\" component={App} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nrender(<Root/>, document.querySelector('#main'));"],"sourceRoot":""}